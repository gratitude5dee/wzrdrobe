@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 280 40% 4%;
    --foreground: 280 10% 98%;

    --card: 280 40% 8%;
    --card-foreground: 280 10% 98%;

    --popover: 280 40% 8%;
    --popover-foreground: 280 10% 98%;

    --primary: 280 40% 40%;
    --primary-foreground: 0 0% 100%;

    --secondary: 280 20% 16%;
    --secondary-foreground: 280 10% 98%;

    --muted: 280 20% 16%;
    --muted-foreground: 280 5% 65%;

    --accent: 280 40% 16%;
    --accent-foreground: 280 10% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 280 20% 16%;
    --input: 280 20% 16%;
    --ring: 280 40% 40%;

    --radius: 1rem;

    --glass-bg: rgba(23, 23, 23, 0.8);
    --glass-border: rgba(255, 255, 255, 0.1);
    --glass-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), 0 4px 16px rgba(0, 0, 0, 0.1);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    letter-spacing: 0.02em;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
}

@layer utilities {
  .perspective-1000 {
    perspective: 1000px;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

@layer components {
  .glass-card {
    @apply relative overflow-hidden rounded-lg;
    background: var(--glass-bg);
    backdrop-filter: blur(12px);
    border: 1px solid var(--glass-border);
    box-shadow: var(--glass-shadow);
  }

  .glass-input {
    @apply bg-white/10 backdrop-blur-xl border-white/20 focus:border-white/30 transition-colors;
  }

  .glass-button {
    @apply bg-primary/90 hover:bg-primary/100 text-primary-foreground backdrop-blur-xl transition-all 
    active:scale-95 disabled:opacity-50 disabled:pointer-events-none disabled:cursor-not-allowed
    uppercase tracking-wider;
  }

  .gradient-bg {
    @apply fixed inset-0 -z-10 h-full w-full;
    background: radial-gradient(
      circle at top center,
      hsl(280, 100%, 30%, 0.3),
      hsl(280, 100%, 20%, 0.1),
      hsl(var(--background))
    );
  }

  .purple-gradient-bg {
    background: linear-gradient(135deg, hsl(280, 100%, 20%, 0.4), hsl(260, 100%, 20%, 0.4), hsl(240, 100%, 20%, 0.4));
  }

  .purple-gradient-card {
    background: linear-gradient(135deg, rgba(104, 14, 142, 0.2), rgba(13, 9, 24, 0.8));
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }

  .noise-pattern {
    @apply fixed inset-0 -z-10 h-full w-full opacity-30;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  }

  .loading-gradient {
    @apply relative overflow-hidden;
  }

  .loading-gradient::after {
    @apply absolute inset-0;
    content: "";
    background: linear-gradient(90deg, transparent, hsl(var(--primary) / 0.1), transparent);
    animation: loading 1.5s infinite;
  }

  @keyframes loading {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }
}
